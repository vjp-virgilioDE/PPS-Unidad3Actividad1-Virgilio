# Documentation: https://github.com/compose-spec/compose-spec/blob/master/spec.md
# Purpose: Build local containers for the Mutillidae environment
---
version: '2.4'

services:

  dvwa_web:
    image: cytopia/dvwa:php-${PHP_VERSION:-8.1}
#    restart: unless-stopped
    ports:
      - "${LISTEN_PORT:-8002}:80"
    networks:
      - labpps-net
    environment:
      - RECAPTCHA_PRIV_KEY=${RECAPTCHA_PRIV_KEY:-}
      - RECAPTCHA_PUB_KEY=${RECAPTCHA_PUB_KEY:-}
      - SECURITY_LEVEL=${SECURITY_LEVEL:-low}
      - PHPIDS_ENABLED=${PHPIDS_ENABLED:-0}
      - PHPIDS_VERBOSE=${PHPIDS_VERBOSE:-0}
      - PHP_DISPLAY_ERRORS=${PHP_DISPLAY_ERRORS:-1}
      - MYSQL_HOSTNAME=dvwa_db
      - MYSQL_DATABASE=dvwa
      - MYSQL_USERNAME=dvwa
      - MYSQL_PASSWORD=p@ssw0rd

  dvwa_db:
    image: mariadb:10.1
    hostname: dvwa_db
    volumes:
      - dvwa_db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: dvwa
      MYSQL_USER: dvwa
      MYSQL_PASSWORD: p@ssw0rd
#    restart: unless-stopped
    networks:
      - labpps-net

  bwapp:
    image: feltsecure/owasp-bwapp
#    restart: unless-stopped
    ports:
      - "${LISTEN_PORT:-8001}:80"
    networks:
      - labpps-net

  kali:
    image: jmmedinac03/kali_pps
    hostname: kali
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true
    volumes:
      - /home/jmmedinac03/docker/PPS/LABPPS/kali-volume:/root/kali
#    restart: unless-stopped
    networks:
      - labpps-net

# MÃ¡quinas de multidillae
  database:
    container_name: database
    image: docker.io/webpwnized/mutillidae:database
    networks:
      - datanet

  database_admin:
    container_name: database_admin
    depends_on:
      - database
    image: docker.io/webpwnized/mutillidae:database_admin
    ports:
      - 127.0.0.1:81:80
    networks:
      - datanet

  # Port 8080 is for StackHawk to scan. Use port 8088 for Burp-Suite
  # IP 127.0.0.1 is for mutillidae.localhost or www.mutillidae.localhost
  # IP 127.0.0.1 is for cors.mutilliiidae.localhost
  www:
    container_name: www
    depends_on:
      - database
      - directory
    image: docker.io/webpwnized/mutillidae:www
    ports:
      - 127.0.0.1:80:80
      - 127.0.0.1:8080:80
      - 127.0.0.1:443:443
      - 127.0.0.2:80:80
      - 127.0.0.2:8080:80
      - 127.0.0.2:443:443
    networks:
      - datanet
      - labpps-net

  directory:
    container_name: directory
    image: docker.io/webpwnized/mutillidae:ldap
    volumes:
      - ldap_data:/var/lib/ldap
      - ldap_config:/etc/ldap/slapd.d
    ports:
      - 127.0.0.1:389:389
    networks:
      - labpps-net

  directory_admin:
    container_name: directory_admin
    depends_on:
      - directory
    image: docker.io/webpwnized/mutillidae:ldap_admin
    ports:
      - 127.0.0.1:82:80
    networks:
      - labpps-net

# Create network segments for the containers to use
networks:
  labpps-net:
    driver: bridge
  datanet:

# Volumes to persist data used by the LDAP server
volumes:
  dvwa_db_data:
  ldap_data:
  ldap_config:

